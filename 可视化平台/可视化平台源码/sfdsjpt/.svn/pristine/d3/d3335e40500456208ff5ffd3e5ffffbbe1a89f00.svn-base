package com.software.entity;

import java.util.ArrayList;
import java.util.List;

public class PubLaAyExample {
    protected String orderByClause;

    protected boolean distinct;

    protected List<Criteria> oredCriteria;

    public PubLaAyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    public String getOrderByClause() {
        return orderByClause;
    }

    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    public boolean isDistinct() {
        return distinct;
    }

    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAjxhIsNull() {
            addCriterion("AJXH is null");
            return (Criteria) this;
        }

        public Criteria andAjxhIsNotNull() {
            addCriterion("AJXH is not null");
            return (Criteria) this;
        }

        public Criteria andAjxhEqualTo(Integer value) {
            addCriterion("AJXH =", value, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhNotEqualTo(Integer value) {
            addCriterion("AJXH <>", value, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhGreaterThan(Integer value) {
            addCriterion("AJXH >", value, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhGreaterThanOrEqualTo(Integer value) {
            addCriterion("AJXH >=", value, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhLessThan(Integer value) {
            addCriterion("AJXH <", value, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhLessThanOrEqualTo(Integer value) {
            addCriterion("AJXH <=", value, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhIn(List<Integer> values) {
            addCriterion("AJXH in", values, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhNotIn(List<Integer> values) {
            addCriterion("AJXH not in", values, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhBetween(Integer value1, Integer value2) {
            addCriterion("AJXH between", value1, value2, "ajxh");
            return (Criteria) this;
        }

        public Criteria andAjxhNotBetween(Integer value1, Integer value2) {
            addCriterion("AJXH not between", value1, value2, "ajxh");
            return (Criteria) this;
        }

        public Criteria andLaaybhIsNull() {
            addCriterion("LAAYBH is null");
            return (Criteria) this;
        }

        public Criteria andLaaybhIsNotNull() {
            addCriterion("LAAYBH is not null");
            return (Criteria) this;
        }

        public Criteria andLaaybhEqualTo(Integer value) {
            addCriterion("LAAYBH =", value, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhNotEqualTo(Integer value) {
            addCriterion("LAAYBH <>", value, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhGreaterThan(Integer value) {
            addCriterion("LAAYBH >", value, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhGreaterThanOrEqualTo(Integer value) {
            addCriterion("LAAYBH >=", value, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhLessThan(Integer value) {
            addCriterion("LAAYBH <", value, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhLessThanOrEqualTo(Integer value) {
            addCriterion("LAAYBH <=", value, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhIn(List<Integer> values) {
            addCriterion("LAAYBH in", values, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhNotIn(List<Integer> values) {
            addCriterion("LAAYBH not in", values, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhBetween(Integer value1, Integer value2) {
            addCriterion("LAAYBH between", value1, value2, "laaybh");
            return (Criteria) this;
        }

        public Criteria andLaaybhNotBetween(Integer value1, Integer value2) {
            addCriterion("LAAYBH not between", value1, value2, "laaybh");
            return (Criteria) this;
        }

        public Criteria andAyIsNull() {
            addCriterion("AY is null");
            return (Criteria) this;
        }

        public Criteria andAyIsNotNull() {
            addCriterion("AY is not null");
            return (Criteria) this;
        }

        public Criteria andAyEqualTo(String value) {
            addCriterion("AY =", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyNotEqualTo(String value) {
            addCriterion("AY <>", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyGreaterThan(String value) {
            addCriterion("AY >", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyGreaterThanOrEqualTo(String value) {
            addCriterion("AY >=", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyLessThan(String value) {
            addCriterion("AY <", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyLessThanOrEqualTo(String value) {
            addCriterion("AY <=", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyLike(String value) {
            addCriterion("AY like", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyNotLike(String value) {
            addCriterion("AY not like", value, "ay");
            return (Criteria) this;
        }

        public Criteria andAyIn(List<String> values) {
            addCriterion("AY in", values, "ay");
            return (Criteria) this;
        }

        public Criteria andAyNotIn(List<String> values) {
            addCriterion("AY not in", values, "ay");
            return (Criteria) this;
        }

        public Criteria andAyBetween(String value1, String value2) {
            addCriterion("AY between", value1, value2, "ay");
            return (Criteria) this;
        }

        public Criteria andAyNotBetween(String value1, String value2) {
            addCriterion("AY not between", value1, value2, "ay");
            return (Criteria) this;
        }

        public Criteria andLaayIsNull() {
            addCriterion("LAAY is null");
            return (Criteria) this;
        }

        public Criteria andLaayIsNotNull() {
            addCriterion("LAAY is not null");
            return (Criteria) this;
        }

        public Criteria andLaayEqualTo(String value) {
            addCriterion("LAAY =", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayNotEqualTo(String value) {
            addCriterion("LAAY <>", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayGreaterThan(String value) {
            addCriterion("LAAY >", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayGreaterThanOrEqualTo(String value) {
            addCriterion("LAAY >=", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayLessThan(String value) {
            addCriterion("LAAY <", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayLessThanOrEqualTo(String value) {
            addCriterion("LAAY <=", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayLike(String value) {
            addCriterion("LAAY like", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayNotLike(String value) {
            addCriterion("LAAY not like", value, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayIn(List<String> values) {
            addCriterion("LAAY in", values, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayNotIn(List<String> values) {
            addCriterion("LAAY not in", values, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayBetween(String value1, String value2) {
            addCriterion("LAAY between", value1, value2, "laay");
            return (Criteria) this;
        }

        public Criteria andLaayNotBetween(String value1, String value2) {
            addCriterion("LAAY not between", value1, value2, "laay");
            return (Criteria) this;
        }
    }

    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}