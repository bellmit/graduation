package com.software.service.impl;


import com.software.service.ShfzService;
import com.software.mapper.AjMapper;
import com.software.mapper.ShfzMapper;
import com.software.model.BgrxxModel;
import com.software.model.KvModel;
import com.software.utils.AgeUtils;
import com.software.utils.DateUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
//涉黑犯罪
@Service
public class ShfzServiceImpl implements ShfzService {
    @Autowired
    ShfzMapper shfzMapper;
    @Autowired
    AjMapper ajMapper;
     //被告人关联罪名
    @Override
    public List<KvModel>  getBgrGlzm(String beginTime, String endTime){
        return shfzMapper.getBgrGlzm(beginTime,endTime);
    }
    @Override
    public List<KvModel> getBrgage(String beginTime, String endTime){
        List<BgrxxModel> bgrxxModels=ajMapper.getBgrAge(beginTime,endTime,"黑");
        List<KvModel> kvModels=new ArrayList<>();
        KvModel kvModel1=new KvModel("已满14岁不满30岁",0);
        KvModel kvModel2=new KvModel("已满18岁不满30岁",0);
        KvModel kvModel3=new KvModel("已满30岁不满40岁",0);
        KvModel kvModel4=new KvModel("已满40岁不满50岁",0);
        KvModel kvModel5=new KvModel("已满50岁不满60岁",0);
        KvModel kvModel6=new KvModel("60岁以上",0);
        kvModels.add(kvModel6);
        kvModels.add(kvModel5);
        kvModels.add(kvModel4);
        kvModels.add(kvModel3);
        kvModels.add(kvModel2);
        kvModels.add(kvModel1);
        int[] ages=new int[]{60,50,40,30,18,14};
        for (BgrxxModel bgrxxModel:bgrxxModels){
            KvModel k=new KvModel();
            int year=0;
            k.setName(bgrxxModel.getAjmc());
            if (bgrxxModel.getLarq()==null){
                continue;
            }
            if (bgrxxModel.getCsnyr()!=null) {
                year = DateUtils.getDiffYear(bgrxxModel.getCsnyr(),bgrxxModel.getLarq());
            }else{
                //如果是合法的身份证号
                if (!"".equals(AgeUtils.ze(bgrxxModel.getSfzhm()))){
                    //获取身份证号的年份
                    String[] res=AgeUtils.ze(bgrxxModel.getSfzhm()).split(":");
                    if (res.length>=2){
                        year=Integer.parseInt(res[0]);
                        int larqyear= DateUtils.getYear(bgrxxModel.getLarq());
                        year=larqyear-year;
                    }
                }
            }
            if (year<14) continue;

            //得到year后
            for(int i=0;i<ages.length;i++){
                //比如42岁 大于40 那么就让get(2)+1
                if (year>ages[i]){
                    kvModels.get(i).setValue(kvModels.get(i).getValue()+1);
                    break;
                }
            }

        }
        return kvModels;
    }

}
